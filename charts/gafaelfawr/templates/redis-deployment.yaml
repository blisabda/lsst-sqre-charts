apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ template "helpers.fullname" . }}-redis
  name: {{ template "helpers.fullname" . }}-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "helpers.fullname" . }}-redis
  template:
    metadata:
      labels:
        app: {{ template "helpers.fullname" . }}-redis
    spec:
      automountServiceAccountToken: false
      containers:
        - name: redis
          image: redis
          imagePullPolicy: "Always"
          args:
            - "redis-server"
            - "--appendonly"
            - "yes"
            - "--requirepass"
            - "$(REDIS_PASSWORD)"
          env:
            - name: "REDIS_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: {{ template "helpers.fullname" . }}-secret
                  key: "redis-password"
          livenessProbe:
            exec:
              command:
                - "sh"
                - "-c"
                - "redis-cli -h $(hostname) incr health:counter"
            initialDelaySeconds: 15
            periodSeconds: 30
          ports:
            - containerPort: 6379
          resources:
            limits:
              cpu: "1"
            requests:
              cpu: "100m"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: redis-data
              mountPath: "/data"
      securityContext:
        fsGroup: 999
        runAsNonRoot: true
        runAsUser: 999
        runAsGroup: 999
      volumes:
        - name: redis-data
          {{- if .Values.redis_claim }}
          persistentVolumeClaim:
            claimName: {{ .Values.redis_claim }}
          {{- else }}
          emptyDir: {}
          {{- end }}
