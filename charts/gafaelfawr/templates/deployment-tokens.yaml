apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "gafaelfawr.fullname" . }}-tokens
  labels:
    {{- include "gafaelfawr.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "gafaelfawr.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: "tokens"
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.tokens.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "gafaelfawr.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: "tokens"
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gafaelfawr.tokensServiceAccountName" . }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
      containers:
        {{- if .Values.cloudsql.enabled }}
        - name: "cloud-sql-proxy"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - "all"
            readOnlyRootFilesystem: true
            runAsUser: 65532
            runAsGroup: 65532
          image: "{{ .Values.cloudsql.image.repository }}:{{ .Values.cloudsql.image.tag }}"
          imagePullPolicy: {{ .Values.cloudsql.image.pullPolicy | quote }}
          command:
            - "/cloud_sql_proxy"
            - "-ip_address_types=PRIVATE"
            - "-instances={{ required "cloudsql.instanceConnectionName must be specified" .Values.cloudsql.instanceConnectionName }}=tcp:5432"
        {{- end }}
        - name: "gafaelfawr-tokens"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - "all"
            readOnlyRootFilesystem: true
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command:
            - "gafaelfawr"
            - "kubernetes-controller"
          env:
            - name: "GAFAELFAWR_DATABASE_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: {{ template "gafaelfawr.fullname" . }}-secret
                  key: "database-password"
          {{- with .Values.resources }}
          resources:
            {{- toYaml .Values.tokens.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: "config"
              mountPath: "/etc/gafaelfawr"
              readOnly: true
            - name: "secret"
              mountPath: "/etc/gafaelfawr/secrets"
              readOnly: true
      volumes:
        - name: "config"
          configMap:
            name: {{ template "gafaelfawr.fullname" . }}-config
        - name: "secret"
          secret:
            secretName: {{ template "gafaelfawr.fullname" . }}-secret
      {{- with .Values.tokens.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tokens.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tokens.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
