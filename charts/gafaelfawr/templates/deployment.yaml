apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "gafaelfawr.fullname" . }}
  labels:
    {{- include "gafaelfawr.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "gafaelfawr.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: "frontend"
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        {{- include "gafaelfawr.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: "frontend"
    spec:
      automountServiceAccountToken: false
      containers:
        - name: gafaelfawr
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          ports:
            - containerPort: 8080
              name: "app"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - "all"
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: "config"
              mountPath: "/etc/gafaelfawr"
              readOnly: true
            - name: "secret"
              mountPath: "/etc/gafaelfawr/secrets"
              readOnly: true
      {{- if .Values.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.pullSecret | quote }}
      {{- end }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
      volumes:
        - name: "config"
          configMap:
            name: {{ template "gafaelfawr.fullname" . }}-config
        - name: "secret"
          secret:
            secretName: {{ template "gafaelfawr.fullname" . }}-secret
