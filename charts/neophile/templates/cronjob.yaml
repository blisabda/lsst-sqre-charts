apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ template "neophile.fullname" . }}
  labels:
    {{- include "neophile.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.schedule | quote }}
  jobTemplate:
    spec:
      template:
        metadata:
          {{- with .Values.podAnnotations }}
          annotations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          labels:
            {{- include "neophile.selectorLabels" . | nindent 12 }}
        spec:
          restartPolicy: "Never"
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          automountServiceAccountToken: false
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
          containers:
            - name: {{ template "neophile.fullname" . }}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - all
                readOnlyRootFilesystem: true
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
              imagePullPolicy: "{{ .Values.image.pullPolicy }}"
              args:
                - "neophile"
                - "-c"
                - "/etc/neophile/neophile.yaml"
                - "process"
              env:
                - name: NEOPHILE_GITHUB_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: {{ template "neophile.fullname" . }}-secret
                      key: "github_token"
              resources:
                {{- toYaml .Values.resources | nindent 16 }}
              volumeMounts:
                - name: "tmp"
                  mountPath: "/tmp"
                - name: "home"
                  mountPath: "/home/appuser"
                - name: "config"
                  mountPath: "/etc/neophile"
                  readOnly: true
                - name: "data"
                  mountPath: "/data"
          volumes:
            - name: "tmp"
              emptyDir: {}
            - name: "home"
              emptyDir: {}
            - name: "config"
              configMap:
                name: {{ template "neophile.fullname" . }}-config
            - name: "data"
              {{- if .Values.persistence.volumeClaim }}
              persistentVolumeClaim:
                claimName: {{ .Values.persistence.volumeClaim }}
              {{- else }}
              emptyDir: {}
              {{- end }}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
